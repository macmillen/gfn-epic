---
import Checkbox from "../components/checkbox.svelte";
import Feedback from "../components/feedback.svelte";
import Footer from "../components/footer.svelte";
import FreeGamesCounter from "../components/free-games-counter.svelte";
import Header from "../components/header.astro";
import Hero from "../components/hero.svelte";
import InfoBar from "../components/info-bar.svelte";
import "../css/font.css";
import type { Card } from "../types";

export interface Props {
  title: string;
  gfnOnly: boolean;
  data: Card[];
  metaDescription: string;
}

const { title, gfnOnly, data, metaDescription } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={metaDescription} />
    <title>{title}</title>
    <script defer src="/_vercel/insights/script.js"></script>
  </head>
  <body>
    <Header />
    <Hero {data} client:idle />

    <InfoBar>
      <FreeGamesCounter games={data.length} />

      <a href={gfnOnly ? "/" : "gfn-only"}>
        <Checkbox id="check-gfn" checked={gfnOnly} isLink>
          Show only GFN supported
        </Checkbox>
      </a>
      <Checkbox id="check-sort-by-rating">Sort by rating</Checkbox>
      <Checkbox id="check-hide-duplicates">Hide duplicates</Checkbox>
    </InfoBar>

    <slot />

    <Footer />

    <Feedback client:idle />
  </body>

  <script>
    import { countdown } from "../utils/countdown";
    import { freeNow } from "../utils/free-now";
    import { sortByRating } from "../utils/sort-by-rating";
    import { hideDuplicates } from "../utils/hide-duplicates";

    setInterval(countdown, 1000);
    setInterval(freeNow, 1000);

    globalThis.gameListElements = [];

    document
      .getElementById("check-sort-by-rating")
      ?.addEventListener("click", ({ target }) => {
        if (target instanceof HTMLInputElement) {
          sortByRating(!target.checked);
        }
      });

    document
      .getElementById("check-hide-duplicates")
      ?.addEventListener("click", ({ target }) => {
        if (target instanceof HTMLInputElement) {
          hideDuplicates(target.checked);
        }
      });
  </script>
</html>

<style is:global>
  body {
    @apply bg-zinc-800 text-zinc-200;
  }

  html {
    scroll-behavior: smooth;
  }

  html {
    @apply scroll-pt-20;
  }

  .hide-dupe {
    @apply hidden;
  }
</style>
